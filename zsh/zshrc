# .zshrc

# Because I always forget this stuff:
# https://zsh.sourceforge.io/Intro/intro_3.html
# `.zshenv' is sourced on all invocations of the shell, unless the -f option is set. It should contain commands to set the command search path [(i.e. your $PATH)], plus other important environment variables. `.zshenv' should not contain commands that produce output or assume the shell is attached to a tty.
# `.zshrc' is sourced in interactive shells. It should contain commands to set up aliases, functions, options, key bindings, etc.
# `.zlogin' is sourced in login shells. It should contain commands that should be executed only in login shells. [`.zlogin' is not the place for alias definitions, options, environment variable settings, etc.; as a general rule, it should not change the shell environment at all. Rather, it should be used to set the terminal type and run a series of external commands (fortune, msgs, etc).] 
# `.zlogout' is sourced when login shells exit. 
# `.zprofile' is similar to `.zlogin', except that it is sourced before `.zshrc'. `.zprofile' is meant as an alternative to `.zlogin' for ksh fans; the two are not intended to be used together, although this could certainly be done if desired.

export EDITOR=nvim
export MACHRC_DIR=/Users/$USER/Developer/machrc

# Terminal.app stuff
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad


# IMPORTANT!
setopt promptsubst

# ANSI escapes
# https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797
# (is tput more portable?
#   check `man terminfo`
#   https://tldp.org/HOWTO/Bash-Prompt-HOWTO/x405.html)
local boldon=$'\e[1m'
local boldoff=$'\e[22m'
local italon=$'\e[3m'
local italoff=$'\e[23m'
local blinkon=$'\e[5m'
local blinkoff=$'\e[25m'
local revon=$'\e[7m'
local revoff=$'\e[27m'
local hiddenon=$'\e[8m'
local hiddenoff=$'\e[28m'
local strikeon=$'\e[9m'
local strikeoff=$'\e[29m'

local fgdef=$'\e[39m'
local fgyellow=$'\e[33m'
local fgcyan=$'\e[36m'

local bgdef=$'\e[49m'

local resetall=$'\e[0m'


# Version control

autoload -Uz vcs_info

# TODO: display number of added, modified, unadded, removed files
#   oh-my-zsh parses `git status --porcelain` to display file info
#   - https://stackoverflow.com/questions/9915543/git-list-of-new-modified-deleted-files
#   - https://github.com/ohmyzsh/ohmyzsh/blob/master/lib/git.zsh

# enabled systems
zstyle ':vcs_info:*' enable git cvs svn hg fossil

local vcs_format=$fgcyan'%s'$fgyellow':'$fgcyan'%b'$resetall
local nvcs_format=$italon'nvcs'$italoff
local action_format=$vcs_format' '$italon'time for some action'$italoff
#zstyle ':vcs_info:*' actionformats '...|%F{1}%a%F{5}]%f '

zstyle ':vcs_info:*' actionsformats $action_format
zstyle ':vcs_info:*' formats $vcs_format
zstyle ':vcs_info:*' nvcsformats $nvcs_format


# Prompt

local term_width
# zsh has 1 column of padding on the right
(( term_width = $COLUMNS - 1 ))

local lpad="        "
local rpad=" "

local lpad_width=$(echo -n $lpad | wc -m)
local rpad_width=$(echo -n $rpad | wc -m)

l_prompt() {
  local mach='$(echo -ne "$italon$USER@$(hostname -s)$italoff")'
  local dir='$(echo -ne "$italon${PWD/\/Users\/$USER/~}$italoff")'
  local vcs='$(echo -ne ${vcs_info_msg_0_})'
  # for some reason, this places extra spacing after the right prompt unless
  #   the escapes are wrapped in `%{ %}`... not sure
  #   I think it's a prompt-only thing:
  #   - https://stackoverflow.com/questions/28799198/zsh-inserts-extra-spaces-when-performing-searches-and-completion
  #   - https://zsh.sourceforge.io/Doc/Release/Prompt-Expansion.html
  local p=$'%{$boldon%}>_ %{$boldoff%}'

  # output
  printf "%s%s\n" $lpad $mach
  printf "%s%s.%s\n" $lpad $dir $vcs
  printf "%s%s" $lpad $p
}

r_prompt() {
  printf "<<%s" $rpad
}

precmd() {
  vcs_info
  print "\n"
}

RPROMPT=$(r_prompt)
PROMPT=$(l_prompt)

preexec() {
  local now=$(date +"%H:%M:%S%z")

  local suf=" <<"
  local suf_width=$(echo -n $suf | wc -m)
  local rpad_width=$(echo -n $rpad | wc -m)

  local pad_width
  (( pad_width = ${term_width} - ${suf_width} - ${rpad_width} ))

  # output
  printf "%s%${pad_width}s%s%s%s\n" $italon $now $italoff $suf $rpad

  #echo "[DEBUG] term: ${term_width} suf: ${suf_width} rpad: ${rpad_width} pad: ${pad_width} now: ${#now}"
}


# Extras

alias vi=$EDITOR

mac() {
  $EDITOR $MACHRC_DIR/zsh/zshrc && source $MACHRC_DIR/zsh/zshrc
}

cs() {
  cd $@
  clear
  echo -e $italon$PWD$italoff
  ls -l
}

cl() {
  clear
}

# just kind of a test script
# you know, to see how things are working
wow() {
  # FIXME: escape any input so it only prints it raw
  #   - `wow "$(echo `echo 'something devious'`)"`
  #     > something devious
  message="$*"
  if [ -z "$message" ] ; then
    message=" L I K E   R I G H T   N O W "
  fi
  # TODO: add centering
  #   determine how much vertical spacing to add depending on $COLUMNS
  styled_message=$blinkon$boldon$italon$fgyellow$message$resetall
  echo $styled_message
}
