# zsh/zshrc.zsh
# 
# @desc z-shell run commands, sourced in interactive shells
#
# `.zshrc' is sourced in interactive shells. It should contain commands to set up aliases, functions, options, key bindings, etc.
# https://zsh.sourceforge.io/Intro/intro_3.html

export LSCOLORS=ExFxCxDxBxegedabagacad
#export LS_COLORS="$LS_COLORS:di=0;36:ln=0;93:ex=0;31:"
export LS_COLORS="$LS_COLORS:di=0;34:ln=0;93:ex=0;31:"

. $MACHRC_DIR/sh/git.sh

. $MACHRC_DIR/zsh/ansi.zsh
. $MACHRC_DIR/zsh/aliases.zsh
. $MACHRC_DIR/zsh/apparatus.zsh
. "$MACHRC_DIR/zsh/prompt/prompt.zsh"
#. $MACHRC_DIR/zsh/test.zsh
. $MACHRC_DIR/zsh/tty.zsh
. "$MACHRC_DIR/zsh/color.zsh"
#. $MACHRC_DIR/zsh/web.zsh

os_name="$(uname -s)"
arch_name="$(uname -p)"

# Could I name the files <$os_name>_<$arch_name>.sh so that I don't need to check anything? Just get the values and source the file?
# Don't know how portable the above would be... Does `uname` behave the same on Linux? Windows?

if [[ "$os_name" = "Darwin" ]]; then
  
  # Apple Silicon
  if [[ "$arch_name" = "arm" ]]; then
    . "$MACHRC_DIR/macos/apple_arm.sh"

  # Apple Intel
  elif [[ "$arch_name" = "x86" ]]; then
    . "$MACHRC_DIR/macos/apple_x86.sh"
  fi
fi
